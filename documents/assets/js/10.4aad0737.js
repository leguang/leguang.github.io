(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{176:function(t,e,r){t.exports=r.p+"assets/img/chushihua0.ba569a89.png"},194:function(t,e,r){"use strict";r.r(e);var a=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"java-web开发模板——效率为王"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-web开发模板——效率为王","aria-hidden":"true"}},[this._v("#")]),this._v(" Java Web开发模板——效率为王")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("Author：Leguang")]),this._v(" "),e("p",[this._v("E-Mail："),e("a",{attrs:{href:"mailto:langmanleguang@qq.com"}},[this._v("langmanleguang@qq.com")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("没有对错，只有习惯")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"公共规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公共规范","aria-hidden":"true"}},[this._v("#")]),this._v(" 公共规范")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境","aria-hidden":"true"}},[this._v("#")]),this._v(" 环境")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("JDK")]),this._v(" "),e("p",[this._v("统一使用 "),e("strong",[this._v("JDK8+")]),this._v(" 以上 JDK 版本，可以使用一些新特性。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构建","aria-hidden":"true"}},[this._v("#")]),this._v(" 构建")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("统一使用 "),e("strong",[this._v("Maven")]),this._v(" 构建系统，与之对比的是 Gradle 构建，谷歌在 Android 上固定使用 Gradle 作为构建系统，Gradle 也具有更强大更灵活的功能，同时脚本即配置，相较于 Maven 的 XML 文件来说是更简洁清晰的，但是标准有标准的好处，自由也有自由的代价，Gradle 的上手成本远高于 Maven ，如果未来 Gradle 成为 Java 构建的主流，我们再切换也不迟。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"spring-boot-spring-cloud"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-spring-cloud","aria-hidden":"true"}},[this._v("#")]),this._v(" Spring Boot + Spring Cloud")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"项目初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目初始化","aria-hidden":"true"}},[this._v("#")]),this._v(" 项目初始化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(176),alt:"chushihua0"}})])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("table",[r("thead",[r("tr",[r("th",[t._v("名称")]),t._v(" "),r("th",[t._v("用途")]),t._v(" "),r("th",[t._v("依赖关系")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("common")]),t._v(" "),r("td",[t._v("公共层，作为最底层的依赖")]),t._v(" "),r("td",[t._v("依赖父 Project")])]),t._v(" "),r("tr",[r("td",[t._v("dao")]),t._v(" "),r("td",[t._v("数据持久层")]),t._v(" "),r("td",[t._v("依赖 common")])]),t._v(" "),r("tr",[r("td",[t._v("service")]),t._v(" "),r("td",[t._v("服务层，即业务逻辑层，调用")]),t._v(" "),r("td",[t._v("依赖 dao")])]),t._v(" "),r("tr",[r("td",[t._v("api")]),t._v(" "),r("td",[t._v("接口层，处理参数和调用 service 完成业务响应")]),t._v(" "),r("td",[t._v("依赖 service")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"swagger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swagger","aria-hidden":"true"}},[this._v("#")]),this._v(" Swagger")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"i18n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i18n","aria-hidden":"true"}},[this._v("#")]),this._v(" i18n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"空格和冗余"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#空格和冗余","aria-hidden":"true"}},[this._v("#")]),this._v(" 空格和冗余")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("不要随意空行，也不要出现多余的东西。写代码时勤快按 "),e("strong",[this._v("Ctrl+Alt+L")]),this._v(" 和 "),e("strong",[this._v("Ctrl+Alt+O")]),this._v(" ，这样会格式化代码同时删除不必要的引用，让代码美观。同时不要随意空格，现在Android Studio是用的谷歌的 Java 模板 Style ，都有相关规定。XML 文件中也是如此，写完代码后勤快格式化，删除多余空行。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"命名规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命名规范","aria-hidden":"true"}},[this._v("#")]),this._v(" 命名规范")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注释","aria-hidden":"true"}},[this._v("#")]),this._v(" 注释")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("类注释写在文件头注释中，每一个类文件都必须要有文件头注释。如下所示：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"image/annotation1.png",alt:"文件头注释示例"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("类的成员变量如果需要注释，则用单行注释写在末尾，如果较长一行写不下，考虑到美观问题则写在成员变量的上面。对于成员变量的注释尽量不要用多行注释。如下所示：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"image/annotation0.png",alt:"成员变量注释示例"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("成员方法尽量写注释，如果实在不需要的，可不写。如下所示：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"image/annotation2.png",alt:"方法注释示例"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"方法出现的位置和顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法出现的位置和顺序","aria-hidden":"true"}},[this._v("#")]),this._v(" 方法出现的位置和顺序")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"image/method.png",alt:"方法位置顺序示例"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"包管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#包管理","aria-hidden":"true"}},[this._v("#")]),this._v(" 包管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mvc中的模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvc中的模板","aria-hidden":"true"}},[this._v("#")]),this._v(" MVC中的模板")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#controller","aria-hidden":"true"}},[this._v("#")]),this._v(" Controller")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("调用业务层代码；")]),this._v(" "),e("li",[this._v("拼装响应对象；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"image%5Ccontroller0.png",alt:"controller0"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service","aria-hidden":"true"}},[this._v("#")]),this._v(" Service")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"0"}},[e("li",[this._v("参数校验；")]),this._v(" "),e("li",[this._v("调用 DAO 层代码，完成业务逻辑处理；")]),this._v(" "),e("li",[this._v("相关处理并返回相关数据；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"image%5Cservice0.png",alt:"service0"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"dao"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dao","aria-hidden":"true"}},[this._v("#")]),this._v(" DAO")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"image%5Cgenerator0.png",alt:"generator0"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"其他-建议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他-建议","aria-hidden":"true"}},[this._v("#")]),this._v(" 其他/建议")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("规定 XxxUtils 类是指不依赖第三方，只需要 JDK 就能运行的类，也就是说随便复制到哪个 Java 项目都能直接用，改都不用改一下。")]),this._v(" "),e("li",[this._v("规定 XxxHelper 类是依赖的第三方的 Utils 类，只需要添加了依赖就可以直接用。")]),this._v(" "),e("li",[this._v("建议配合 lombok 使用，以减少代码。")]),this._v(" "),e("li",[this._v("建议使用 Optional 和 Stream 等 JDK8+ 中的新特性。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])}],i=r(0),s=Object(i.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),r("p",[t._v("Java Web 的 MVC 模式开发已经具备一定的模板性，但是由于人与人的习惯问题，对代码的细节会有一定的差异性，为了减少这种差异性，我们规定一套模板出来，同一个小组、部分甚至公司都可以按照这么一套最佳实践出来的模板抄，这样未来其他人员接手时会很容易明白你的套路，找到亲切感以减少不必要的心理负担。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),r("ul",[r("li",[r("p",[t._v("IDE")]),t._v(" "),r("p",[t._v("统一使用"),r("strong",[t._v("IntelliJ IDEA")]),t._v("作为开发IDE，Eclipse 虽然也可以，但是如果要做到统一的话，还是尽量使用更现代化、更先进的 IDE ，IntelliJ IDEA 在 Java 开发体系中已经超过 Eclipse 成为最主流的 IDE 了。同时要对 IDEA 做一些配置："),r("a",{attrs:{href:"https://www.cnblogs.com/dongfanghao/p/7582585.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("idea安装完成后要做的几件事"),r("OutboundLink")],1),t._v(" 。")])]),t._v(" "),t._m(6)]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),r("p",[t._v("统一使用 Spring Boot 作为 Java Web 开发的首选。现阶段做 Java Web 开发的，Struct 已经不需要考虑了，Spring MVC 也有 Spring Boot 做为更好的选择，如果有 Spring MVC 的经验的话，上手 Spring Boot 是很简单的事儿。同时 Spring Boot 是作为 Spring Cloud 的基础，所以使用这一套是趋势。")]),t._v(" "),t._m(10),t._v(" "),r("p",[t._v("要求每一个项目（可执行服务）的结构是模块化的结构，即最外层 Maven 作为项目顶层父 Project 依赖配置都写在该层的 pom.xml 文件中，然后根据 MVC 分三层，每一层都以 Module 形式构建依次向下依赖，同时加一个 Common 公共层 Module 作为最底层依赖。搭建如下图所示：")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),r("p",[t._v("Swagger 是项目的默认需求，同时要求 Swagger 能在开发环境中打开，在生产环境是关闭的。")]),t._v(" "),t._m(14),t._v(" "),r("p",[t._v("国际化能力也是每一个项目默认需求，Spring Boot 对这一部分有了很好的支持。这个要提前考虑，如果一开始不考虑，项目突然有需要的时候就很麻烦和被动了。")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),r("p",[t._v("具体参考："),r("a",{attrs:{href:"https://github.com/leguang/Article/blob/master/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C(%E7%BB%88%E6%9E%81%E7%89%88).pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/leguang/Article/blob/master/阿里巴巴Java开发手册(终极版).pdf"),r("OutboundLink")],1)]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),r("p",[t._v("在方法从上至下的调用顺序就决定了方法从上至下书写的位置。如下所示：")]),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),r("p",[t._v("Controller 层作为视图或 API 的入口，除了面向接口编程等基本要求外，只做以下三件事：\n0. 参数、请求方法等校验；")]),t._v(" "),t._m(30),t._v(" "),r("p",[t._v("如下图所示：")]),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),r("p",[t._v("Service 层业务逻辑层，除了面向接口编程等基本要求外，只做以下三件事：")]),t._v(" "),t._m(33),t._v(" "),r("p",[t._v("如下图所示：")]),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),r("p",[t._v("DAO 我们统一使用 MyBatis 套件，因此可以利用 MyBatis 提供的生成器去生成大部分代码，具体的可以利用 generator 这个目录下的工具完成，如下图所示：")]),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),r("p",[t._v("之所以定义这样的模板代码，主要是为了规范编码范式，使每个模块都“长得一样”，一套好的模板代码可以让开发者受益，也可以让后来接手的人很快找到套路并理解融入进去。")])])},a,!1,null,null,null);e.default=s.exports}}]);