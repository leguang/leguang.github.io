(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{206:function(t,e,r){"use strict";r.r(e);var a=r(0),i=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("由于我司目前处于项目探索阶段，会有较多的项目和迭代，因此快速开发是主旋律，可维护是基调，这就要求代码高可复用、灵活拆分、便于调试，基于这些原因我将根据经验对Android开发架构和技术选型进行梳理。这份文档可看做我司Android部分项目简介和技术简介。由于时间紧凑，若有遗漏可通过QQ/微信666233联系我询问。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),r("p",[t._v("使用Android Studio3.0及以上版本，Android Studio在3.0这一版本改动比较大，功能上增强了不少，起码可以原生使用Lambda，也可以使用Stream流操作集合，这些在数据处理上都是很好的。")]),t._v(" "),t._m(5),t._v(" "),r("p",[t._v("工欲善其事必先利其器，配合好插件事半功倍，以下是几个最常用的，需要安装一下。")]),t._v(" "),t._m(6),t._v(" "),r("p",[t._v("更多详情请参考："),r("a",{attrs:{href:"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2017/0526/7973.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Android 开发者工具"),r("OutboundLink")],1),t._v("。")]),t._v(" "),t._m(7),t._v(" "),r("p",[t._v("一名二姓三风水，四积阴德五读书，名不正则言不顺，言不顺则事难成。软件开发其实就是门命名的艺术，所以首先定义一些规范，提出一些硬性要求，大家在命名的时候尽量多花点心思，多参考优秀的命名风格（强烈推荐参考："),r("a",{attrs:{href:"https://github.com/leguang/Article/blob/master/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Android%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里巴巴Java开发手册"),r("OutboundLink")],1),t._v("），以利于项目维护、增强代码可读性、提升 Code Review 效率以及规范团队协作开发，让我们按照规范自成方圆，具体请参考："),r("a",{attrs:{href:"https://github.com/leguang/Article/blob/master/Android%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/Android%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Android开发规范"),r("OutboundLink")],1),t._v("。同时开源配合阿里巴巴开源的java代码规范检测插件，尽量做到各个维度的规范。")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),r("p",[t._v("对Gradle的配置要求：")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),r("p",[t._v("组件是指项目开发中能作为一个独立功能的部分。我们平时开发中尽量将独立功能的部分（例如某一个自定义View，或者某个工具类等）抽取出来做成组件，然后发布到jcenter、jitpack或者私有服务器上，平时开发的时候就直接在Gradle里配置依赖即可，目的也是为了快速开发和充分复用。")]),t._v(" "),t._m(13),t._v(" "),r("p",[t._v("首先模块化的目的除了为了快速开发和复用代码外，更为了在项目逐渐庞大起来后能灵活协作开发和单独调试，耦合度降低便于拆分组合。根据以往经验，我将整体架构分为5层（并不一定要分这么多层），其关系应该是如下图所示：")]),t._v(" "),t._m(14),t._v(" "),r("p",[t._v("整体架构从上依赖至下，下层为上层提供服务。架构的设计主要是为了应对我们公司自身业务探索时快速开发，在不断的开发过程中汲取可用部分抽象整理成独立的模块以方便后续使用。同时模块的划分也根据不同的功能和业务划分到不同的层级中。理论上来说可以有一个集成代码库，然后从这一套代码中通过差异化的构建，编译出不同的App，缺点是代码库会越来越大，组件越来越多，模块也越来越多。如果单独根据项目来集成又会出现多套相同代码需要维护的问题，这个得根据业务需求和是否需要长期维护等因素适当取舍才行。根据Android项目的目录特点，每一个项目在创建出来会有一个App module，这个module我们当做一个空壳，单独依赖main层，只根据需求写Gradle配置而已。模块之间的通讯通过ARouter进行，或者可以自己在ACommon层定义接口的方式进行通讯。")]),t._v(" "),t._m(15),t._v(" "),r("p",[t._v("MVC/MVP/MVVM模式有很多，这里所说的也不是纯粹的MVP，应该是MVP和MVVM混合体的改造版，目的还是为了充分解耦和方便调试。同时为了方便调试，各层之间完全依赖接口，如下图所示：")]),t._v(" "),t._m(16),t._v(" "),r("p",[t._v("同时由于我们强调组件化、模块化，可以总结为按业务分模块，按功能分组件，按MVP分层。")]),t._v(" "),t._m(17),t._v(" "),r("p",[t._v("为了取得更好的性能，页面更好的管理，整体UI框架以多Activity+多Fragment的形式搭建，界面经历优先选择使用Fragment，Activity只做Fragment的容器，同时Fragment做为MVP模式中的View层。使用了Fragmentation这个框架来操作Fragment，这样合理的控制Activity个数，也使得界面更轻量级。")]),t._v(" "),t._m(18),t._v(" "),r("p",[t._v("公共依赖配置在abse module的build.gradle里，其他特殊需求的依赖配置在main module的build.gradle中，可自行到Github上查看学习。")]),t._v(" "),t._m(19),t._v(" "),r("p",[t._v("需要注意的是在引入第三方库的时候应做好充分调查。")]),t._v(" "),t._m(20),t._v(" "),r("p",[t._v("统一使用git进行管理。")]),t._v(" "),t._m(21),t._v(" "),r("p",[t._v("理论上在立项之后，由于前面的充分准备，加上模块化的开发，前期在UI图还没拿到手之前，就能将一个App最初期的任务如项目搭建、闪屏页、欢迎页、注册登录、个人信息、设置等常规模块通过引人的方式快速完成。之后再根据接口约束开发，不需要等着后台接口做好再动手。")]),t._v(" "),t._m(22),t._v(" "),t._m(23)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"android端架构与技术选型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#android端架构与技术选型","aria-hidden":"true"}},[this._v("#")]),this._v(" Android端架构与技术选型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("Author：Leguang")]),this._v(" "),e("p",[this._v("E-Mail："),e("a",{attrs:{href:"mailto:langmanleguang@qq.com"}},[this._v("langmanleguang@qq.com")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"开发环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境","aria-hidden":"true"}},[this._v("#")]),this._v(" 开发环境")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"ide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ide","aria-hidden":"true"}},[this._v("#")]),this._v(" IDE")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"工具插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工具插件","aria-hidden":"true"}},[this._v("#")]),this._v(" 工具插件")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("GsonFormat")]),t._v(" "),r("li",[t._v("Translation")]),t._v(" "),r("li",[t._v("CodeGlance")]),t._v(" "),r("li",[t._v("Android Drawable Importer")]),t._v(" "),r("li",[t._v("folding-plugin")]),t._v(" "),r("li",[t._v("Android Studio Prettify")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规范","aria-hidden":"true"}},[this._v("#")]),this._v(" 规范")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("一个单词尽量选择5--7个字母的，这样才最优美。")]),this._v(" "),e("li",[this._v("首字母缩写的单词尽量每个字母都用大写，例如ID。用个小写，人家还以为是一个单词。当然uri、url、urn这种除外，因为大家都知道这个是什么。")]),this._v(" "),e("li",[this._v("前后端的某些名称概念要统一用某一个单词，比如支付的统一订单，支付宝用的是order，微信用的是unifiedorder，那我们统一对订单这个概念用order这个词。再比如主机：后台用gateway，现在我们统一用host。这单词不统一很容易分裂。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"android技术栈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#android技术栈","aria-hidden":"true"}},[this._v("#")]),this._v(" Android技术栈")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"gradle构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gradle构建","aria-hidden":"true"}},[this._v("#")]),this._v(" Gradle构建")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("对于编译版本和依赖版本等进行统一管理。")]),t._v(" "),r("li",[t._v("尽量分为debug版本和release版本。")]),t._v(" "),r("li",[t._v("能自动处理版本号。")]),t._v(" "),r("li",[t._v("配置多渠道打包。")]),t._v(" "),r("li",[t._v("自定义输出各类Apk文件名称。")]),t._v(" "),r("li",[t._v("尽量通过配置Gradle的形式配置第三方Key。")]),t._v(" "),r("li",[t._v("通过productFlavors构建不同的渠的App（应用场景有很多，比如应用商店的加壳）。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"组件化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件化","aria-hidden":"true"}},[this._v("#")]),this._v(" 组件化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"模块化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块化","aria-hidden":"true"}},[this._v("#")]),this._v(" 模块化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.imgur.com/IwjarzT.png",alt:"架构图"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"mvp模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mvp模式","aria-hidden":"true"}},[this._v("#")]),this._v(" MVP模式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://i.imgur.com/UgFvZJg.jpg",alt:"MVP模式"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"ui框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ui框架","aria-hidden":"true"}},[this._v("#")]),this._v(" UI框架")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"依赖"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖","aria-hidden":"true"}},[this._v("#")]),this._v(" 依赖")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("网络访问框架：OkHttp、Retrofit配合RxJava2。")]),t._v(" "),r("li",[t._v("图片加载框架：Glide、Fresco、Picasso。")]),t._v(" "),r("li",[t._v("缓存框架：DiskLruCache、 Robospice。")]),t._v(" "),r("li",[t._v("Json解析框架：Gson、Fastjson、Jackson。")]),t._v(" "),r("li",[t._v("事件总线：EventBus。")]),t._v(" "),r("li",[t._v("ORM框架：Litepal、Room。")]),t._v(" "),r("li",[t._v("数据统计：友盟统计，百度统计。")]),t._v(" "),r("li",[t._v("奔溃搜集：腾讯Bugly、Bugtags。")]),t._v(" "),r("li",[t._v("云存储：七牛。")]),t._v(" "),r("li",[t._v("即使通讯：环信、融云、阿里百川。")]),t._v(" "),r("li",[t._v("推送：小米推送、华为推送、腾讯推送、阿里云推送。")]),t._v(" "),r("li",[t._v("安全加固：360加固宝、爱加密。")]),t._v(" "),r("li",[t._v("还有其他各种各样开源的自定义控件、动画等。除了以上提到的开源框架，也包括一些不开源的SDK。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"代码管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码管理","aria-hidden":"true"}},[this._v("#")]),this._v(" 代码管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"前后端分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前后端分离","aria-hidden":"true"}},[this._v("#")]),this._v(" 前后端分离")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"建议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建议","aria-hidden":"true"}},[this._v("#")]),this._v(" 建议")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("作为一个有追求的程序员，应尽量使用最新的技术。")]),t._v(" "),r("li",[t._v("现在Android 4.4以下的手机已经越来越少，几乎可以不用考虑，因此可以把minSdkVersion设置成21。")]),t._v(" "),r("li",[t._v("在使用icon的时候，尽量使用矢量图。")]),t._v(" "),r("li",[t._v("数据操作可以考虑使用RxJava或者Stream。")]),t._v(" "),r("li",[t._v("建议平时养成写备忘录的习惯，想到点什么与产品有关的就快速记下来，开会的时候就一起讨论。")])])}],!1,null,null,null);e.default=i.exports}}]);